<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://free-v2ray.github.io/news/article-85295.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar</title>
        <meta name="description" content="大家好，我给大家分享一下仿豆瓣app的教程。当然了，我们不是用原生去实现，而是用前端框架vuejs来实现豆瓣app。————第一次写文章，写得不好请见谅。  为什么我们选择豆瓣app 来做这样一个教程" />
        <link rel="icon" href="/assets/website/img/free_v2ray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free V2ray免费梯子节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://free-v2ray.github.io/news/article-85295.htm" />
    <meta property="og:site_name" content="Free V2ray免费梯子节点分享官网" />
    <meta property="og:title" content="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" />
    <meta property="og:image" content="https://free-v2ray.github.io/uploads/20240911-1/4fb12930b657a4ad22f388e212798971.webp" />
        <meta property="og:release_date" content="2025-03-31T08:40:42" />
    <meta property="og:updated_time" content="2025-03-31T08:40:42" />
        <meta property="og:description" content="大家好，我给大家分享一下仿豆瓣app的教程。当然了，我们不是用原生去实现，而是用前端框架vuejs来实现豆瓣app。————第一次写文章，写得不好请见谅。  为什么我们选择豆瓣app 来做这样一个教程" />
        
    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/free_v2ray/style-starter.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EFW7LQ09JM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EFW7LQ09JM');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
<header id="site-header" class="fixed-top">
    <div class="container">
        <nav class="navbar navbar-expand-lg stroke px-0">
                        <a class="navbar-brand" href="/">
                <span>
                    Free V2ray                </span>
            </a>
                        <!-- if logo is image enable this
    <a class="navbar-brand" href="#index.html">
        <img src="image-path" alt="Your logo" title="Your logo" style="height:35px;" />
    </a> -->
            <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                <span class="navbar-toggler-icon fa icon-close fa-times"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                <ul class="navbar-nav ml-lg-auto">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                    </ul>
            </div>
            <!-- toggle switch for light and dark theme -->
            <div class="cont-ser-position mt-lg-2">
                <nav class="navigation">
                    <div class="theme-switch-wrapper">
                        <label class="theme-switch" for="checkbox">
                            <input type="checkbox" id="checkbox">
                            <div class="mode-container">
                                <i class="gg-sun"></i>
                                <i class="gg-moon"></i>
                            </div>
                        </label>
                    </div>
                </nav>
            </div>
            <!-- //toggle switch for light and dark theme -->
        </nav>
    </div>
</header>
<!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <div class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold">1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><i class="fas fa-angle-right mx-2"></i></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><i class="fas fa-angle-right mx-2"></i>正文</li>
                </ul>
            </div>
        </div>
    </div>
    <!-- //inner banner -->
    <!-- progress section -->
    <section class="w3l-about-2 py-5">
        <div class="container py-2">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <div class="article fmt article__content"> <blockquote> <p>大家好，我给大家分享一下仿豆瓣app的教程。当然了，我们不是用原生去实现，而是用前端框架vuejs来实现豆瓣app。————第一次写文章，写得不好请见谅。</p> </blockquote> <p><strong>为什么我们选择豆瓣app 来做这样一个教程？</strong></p> <blockquote> <p>是因为我很早就接触豆瓣这个网站，我比较喜欢看豆瓣里面电影和文章的点评。并且豆瓣提供了非常丰富的一个api接口供我们使用。也就是说我们可以不通过后端，直接通过前端ajax来获取电影和图书的数据，来组装我们app。</p> </blockquote> <p>我们可以看一下豆瓣app首页是一个什么样子 gif</p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/4130e85b363c093d230e8017d7eb7835.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>以上就是豆瓣app的一个截图。</p> <p><strong>我们先来分析一下</strong></p> <blockquote> <p>首页分为四个部分。第一个就是顶部的搜索框。搜索框下面就是一个banner图切换。在下面就是一些热点的文章列表。最底部就是一个tab切换。在这篇教程中，我们通过vue的组件来实现这样一个首页的布局。</p> </blockquote> <ul> <li> <ul> <li> <ul> <li> <ul> <li> <p>*<br /><strong>创建豆瓣项目</strong></p> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>我们可以通过官方vue-cli初始化项目,这里我们采用webpack示例</p> <pre><code>vue init webpack douban</code></pre> <p>填写项目描述，作者，安装vue-router</p> <pre><code>? Project name douban ? Project description douban ? Author afei ? Vue build standalone ? Install vue-router? Yes ? Use ESLint to lint your code? No ? Setup unit tests with Karma + Mocha? No ? Setup e2e tests with Nightwatch? No     vue-cli · Generated "douban".     To get started:       cd douban      npm install      npm run dev     Documentation can be found at https://vuejs-templates.github.io/webpack</code></pre> <p>初始化后，通过npm install安装依赖</p> <pre><code>cd douban npm install</code></pre> <p>运行项目,可以看到基于官方vue-cli的模版就创建好了</p> <pre><code>npm run dev</code></pre> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/b773e01c3639c091675ec779452e9110.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>将所需要用的资源，拷贝到项目中，这里我通过解压豆瓣app获得他的一些图片素材，拷入到src/assets/images目录里。</p> <p>css这里我用到了normaliz.css</p> <p>在src下，新建了一个pages目录，存放每一个页面组件，可以看一下我们的目录</p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/e4c1c9f4724be814222c2735c7a71e6d.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>由于我们的首页更改了位置，所以在router里面的index.js需要更改为</p> <pre><code>import Vue from 'vue' import Router from 'vue-router' import Index from '../pages/Index'  Vue.use(Router)  export default new Router({   routes: [     {       path: '/',       name: 'Index',       component: Index     }   ] }) </code></pre> <p>每一个组件的css我们通过less来编写，所有需要通过npm安装less插件</p> <pre><code>npm install less less-loader --save</code></pre> <p>使用less预处理器需要在页面添加 lang='less'</p> <pre><code>&lt;style scoped lang="less"&gt;      &lt;/style&gt;</code></pre> <p><strong>第一个组件 tabbar</strong></p> <p>如何创建自定义组件tabbar，也就是豆瓣app底部的工具栏。这里的结构我们参考了<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/ElemeFE/mint-ui"  rel="nofollow">mint-ui</a></p> <p>这是我们将要实现的效果图。</p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/85b65dcb3d2126d418bc0b0204219134.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>我们先来分析一下这个组件的结构。</p> <p>这个组件分为两部分：第一个是组件的外层容器，第二个是组件的子容器item，子组件里面又分为图片和文字组合。子组件有2个状态，一个默认灰色的状态，一个选中状态，我们来实现一下这个组件的布局。在index.vue里面</p> <p>template</p> <pre><code>&lt;div class="m-tabbar"&gt;   &lt;a class="m-tabbar-item is-active"&gt;     &lt;span class="m-tabbar-item-icon"&gt;        &lt; img src="../assets/images/ic_tab_home_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt=""&gt;     &lt;/span&gt;      &lt;span class="m-tabbar-item-text"&gt;             首页     &lt;/span&gt;   &lt;/a&gt;    &lt;a class="m-tabbar-item"&gt;     &lt;span class="m-tabbar-item-icon"&gt;        &lt; img src="../assets/images/ic_tab_subject_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt=""&gt;     &lt;/span&gt;      &lt;span class="m-tabbar-item-text"&gt;             书影音     &lt;/span&gt;   &lt;/a&gt;    &lt;a class="m-tabbar-item"&gt;     &lt;span class="m-tabbar-item-icon"&gt;        &lt; img src="../assets/images/ic_tab_status_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt=""&gt;     &lt;/span&gt;      &lt;span class="m-tabbar-item-text"&gt;             广播     &lt;/span&gt;   &lt;/a&gt;    &lt;a class="m-tabbar-item"&gt;     &lt;span class="m-tabbar-item-icon"&gt;        &lt; img src="../assets/images/ic_tab_group_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt=""&gt;     &lt;/span&gt;      &lt;span class="m-tabbar-item-text"&gt;             小组     &lt;/span&gt;   &lt;/a&gt;    &lt;a class="m-tabbar-item"&gt;     &lt;span class="m-tabbar-item-icon"&gt;        &lt; img src="../assets/images/ic_tab_profile_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt=""&gt;     &lt;/span&gt;      &lt;span class="m-tabbar-item-text"&gt;             我的     &lt;/span&gt;   &lt;/a&gt;  &lt;/div&gt;</code></pre> <p>style</p> <pre><code>&lt;style lang="less"&gt; .m-tabbar{     display: flex;     flex-direction: row;     position: fixed;     bottom: 0;     left: 0;     right: 0;     width: 100%;     overflow: hidden;     height: 50px;     background: #fff;     border-top: 1px solid #e4e4e4;          .m-tabbar-item{       flex: 1;       text-align: center;       .m-tabbar-item-icon{           display: block;           padding-top: 2px;           img{               width: 28px;               height: 28px;           }       }       .m-tabbar-item-text{           display: block;           font-size: 10px;           color:#949494;       }       &amp;.is-active{           .m-tabbar-item-text{               color: #42bd56;           }       }   } } &lt;/style&gt;</code></pre> <p>布局大功告成~~~~</p> <p>前面我们说的是，通过组件的方式来实现这个app。</p> <p>如果像上面代码这样的话肯定是不行的！既然我们大体布局已经写好了，现在就可以通过组件的方式来调用。当然我们还要改造一下代码。</p> <p>先在components文件夹下面，新建两个组件，通过这两个组件来组合实现我们底部的tab组件：</p> <p><strong>一个是tabbar-item.vue，实现子组件的item项，</strong></p> <p><strong>tabbar-item.vue</strong></p> <pre><code>&lt;template&gt;     &lt;a class="m-tabbar-item" &gt;         &lt;span class="m-tabbar-item-icon"&gt;&lt;slot name="icon-normal"&gt;&lt;/slot&gt;&lt;/span&gt;         &lt;span class="m-tabbar-item-text"&gt;&lt;slot&gt;&lt;/slot&gt;&lt;/span&gt;     &lt;/a&gt; &lt;/template&gt;  &lt;style lang="less"&gt; .m-tabbar-item{     flex: 1;     text-align: center;     .m-tabbar-item-icon{         display: block;         padding-top: 2px;         img{             width: 28px;             height: 28px;         }      }     .m-tabbar-item-text{         display: block;         font-size: 10px;         color:#949494;     }     &amp;.is-active{         .m-tabbar-item-text{             color: #42bd56;         }     } } &lt;/style&gt;</code></pre> <p><strong>一个是tabbar.vue，实现tab的外层容器，</strong></p> <p><strong>tabbar.vue</strong></p> <pre><code>&lt;template&gt;     &lt;div class="m-tabbar"&gt;        &lt;slot&gt;&lt;/slot&gt;     &lt;/div&gt; &lt;/template&gt; &lt;style lang="less"&gt; .m-tabbar{     display: flex;     flex-direction: row;     position: fixed;     bottom: 0;     left: 0;     right: 0;     width: 100%;     overflow: hidden;     height: 50px;     background: #fff;     border-top: 1px solid #e4e4e4; } &lt;/style&gt;</code></pre> <p>在Index.vue中组合这两个组件，实现tab组件效果</p> <pre><code>&lt;template&gt;   &lt;div&gt;     &lt;m-tabbar&gt;       &lt;m-tabbar-item id='tab1'&gt;         &lt; img src="../assets/images/ic_tab_home_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          首页       &lt;/m-tabbar-item&gt;       &lt;m-tabbar-item id='tab2'&gt;         &lt; img src="../assets/images/ic_tab_subject_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          书影音       &lt;/m-tabbar-item&gt;       &lt;m-tabbar-item id='tab3'&gt;         &lt; img src="../assets/images/ic_tab_status_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          广播       &lt;/m-tabbar-item&gt;       &lt;m-tabbar-item id='tab4'&gt;         ![](../assets/images/ic_tab_group_normal.png)          小组       &lt;/m-tabbar-item&gt;        &lt;m-tabbar-item id='tab5'&gt;         &lt; img src="../assets/images/ic_tab_profile_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          我的       &lt;/m-tabbar-item&gt;     &lt;/m-tabbar&gt;   &lt;/div&gt; &lt;/template&gt;  &lt;script&gt;   import mTabbar from '../components/tabbar'   import mTabbarItem from '../components/tabbar-item'   export default {     name: 'index',     components: {       mTabbar,       mTabbarItem     }   } &lt;/script&gt; </code></pre> <p>完成的效果。</p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/c167a4273bb9f4bbbb3453c8067c3552.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <ul> <li> <ul> <li> <ul> <li> <ul> <li> <p>*</p> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p><strong>光有一个死的界面，没有点击切换的效果怎么能行？</strong></p> <p>以下我们通过vue使用自定义事件的表单输入组件来实现点击切换的效果。</p> <ul> <li> <ul> <li> <ul> <li> <ul> <li> <p>*</p> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>先给Index.vue里面的tab组件加上v-model 来进行数据双向绑定，通过select来达到选择item，在item里面再添加一个选中的active图片</p> <pre><code>&lt;template&gt;   &lt;div&gt;     测试     &lt;m-tabbar v-model="select"&gt;       &lt;m-tabbar-item id='tab1'&gt;         &lt; img src="../assets/images/ic_tab_home_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          &lt; img src="../assets/images/ic_tab_home_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-active"&gt;          首页       &lt;/m-tabbar-item&gt;       &lt;m-tabbar-item id='tab2'&gt;         &lt; img src="../assets/images/ic_tab_subject_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          &lt; img src="../assets/images/ic_tab_subject_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-active"&gt;          书影音       &lt;/m-tabbar-item&gt;       &lt;m-tabbar-item id='tab3'&gt;         &lt; img src="../assets/images/ic_tab_status_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          &lt; img src="../assets/images/ic_tab_status_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-active"&gt;          广播       &lt;/m-tabbar-item&gt;       &lt;m-tabbar-item id='tab4'&gt;         &lt; img src="../assets/images/ic_tab_group_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          &lt; img src="../assets/images/ic_tab_group_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          小组       &lt;/m-tabbar-item&gt;        &lt;m-tabbar-item id='tab5'&gt;         &lt; img src="../assets/images/ic_tab_profile_normal.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          &lt; img src="../assets/images/ic_tab_profile_active.png" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar" alt="" slot="icon-normal"&gt;          我的       &lt;/m-tabbar-item&gt;     &lt;/m-tabbar&gt;   &lt;/div&gt; &lt;/template&gt;  &lt;script&gt;   import mTabbar from '../components/tabbar'   import mTabbarItem from '../components/tabbar-item'   export default {     name: 'index',     components: {       mTabbar,       mTabbarItem     },     data() {       return {         select:"tab1"       }     }   } &lt;/script&gt;</code></pre> <p>tabbar.vue里面通过props来传递数据vaule</p> <pre><code>&lt;template&gt;     &lt;div class="m-tabbar"&gt;        &lt;slot&gt;&lt;/slot&gt;     &lt;/div&gt; &lt;/template&gt; &lt;script&gt;     import mTabbarItem from './tabbar-item';     export default {         props: ['value']     } &lt;/script&gt; &lt;style lang="less"&gt; .m-tabbar{     display: flex;     flex-direction: row;     position: fixed;     bottom: 0;     left: 0;     right: 0;     width: 100%;     overflow: hidden;     height: 50px;     background: #fff;     border-top: 1px solid #e4e4e4; } &lt;/style&gt;</code></pre> <p>tabbar-item.vue组件：根据父组件的value和当前组件的id判断是否为选中状态,通过 $parent.$emit('input',id) - 触发父组件的自定义事件，添加选中的图片，根据isActive来显示隐藏</p> <pre><code>&lt;template&gt;     &lt;a class="m-tabbar-item" :class="{'is-active':isActive}" @click="$parent.$emit('input',id)"&gt;         &lt;span class="m-tabbar-item-icon" v-show="!isActive"&gt;&lt;slot name="icon-normal"&gt;&lt;/slot&gt;&lt;/span&gt;         &lt;span class="m-tabbar-item-icon" v-show="isActive"&gt;&lt;slot name="icon-active"&gt;&lt;/slot&gt;&lt;/span&gt;         &lt;span class="m-tabbar-item-text"&gt;&lt;slot&gt;&lt;/slot&gt;&lt;/span&gt;     &lt;/a&gt; &lt;/template&gt; &lt;script&gt;     export default{         props: ['id'],         computed: {            isActive(){                if(this.$parent.value===this.id){                    return true;                }            }         }     } &lt;/script&gt; &lt;style lang="less"&gt; .m-tabbar-item{     flex: 1;     text-align: center;     .m-tabbar-item-icon{         display: block;         padding-top: 2px;         img{             width: 28px;             height: 28px;         }      }     .m-tabbar-item-text{         display: block;         font-size: 10px;         color:#949494;     }     &amp;.is-active{         .m-tabbar-item-text{             color: #42bd56;         }     } } &lt;/style&gt;</code></pre> <p>大功告成，tabbar组件就完成了<del>~</del></p> <p><span class="img-wrap"><img decoding="async" src="http://img.555519.xyz/uploads/20230108/e2816005af19a86536cdc33b8987d8c5.jpg" alt="1-vuejs2.0实战：仿豆瓣app项目，创建自定义组件tabbar"></span></p> <p>感谢饿了么团队给我们带来了这么好的ui组件！</p> <p>源码下载 链接：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://pan.baidu.com/s/1qYlR8g0"  rel="nofollow">http://pan.baidu.com/s/1qYlR8g0</a> 密码：9yph</p> <p>下载安装</p> <pre><code>npm install npm run dev</code></pre> </div></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-84571.htm">宠物领养网官网网址是多少（宠物领养网站html模板）</a></p>
                                        <p>下一个：<a href="/news/article-85297.htm">动物疫苗怎么注射视频讲解（动物疫苗的使用）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-82444.htm" title="500公斤饲料粉碎搅拌机视频讲解（五百公斤饲料粉碎搅拌机）">500公斤饲料粉碎搅拌机视频讲解（五百公斤饲料粉碎搅拌机）</a></li>
                        <li class="py-2"><a href="/news/article-72890.htm" title="长沙宠物领养中心官网电话 长沙宠物领养中心官网电话号码">长沙宠物领养中心官网电话 长沙宠物领养中心官网电话号码</a></li>
                        <li class="py-2"><a href="/news/article-68321.htm" title="十大动物疫苗公司排名前十有哪些 十大动物疫苗公司排名前十有哪些品牌">十大动物疫苗公司排名前十有哪些 十大动物疫苗公司排名前十有哪些品牌</a></li>
                        <li class="py-2"><a href="/news/article-81053.htm" title="天照宠物医院杜坤简历介绍（天照宠物医院大兴店）">天照宠物医院杜坤简历介绍（天照宠物医院大兴店）</a></li>
                        <li class="py-2"><a href="/news/article-78286.htm" title="动物疫苗企业排名前十有哪些 动物疫苗公司排名">动物疫苗企业排名前十有哪些 动物疫苗公司排名</a></li>
                        <li class="py-2"><a href="/news/article-76260.htm" title="Java和JavaScript之间的区别。">Java和JavaScript之间的区别。</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-6-node-share-links.htm" title="3月6日→20.8M/S|2025年最新免费节点Free V2ray订阅链接地址分享">3月6日→20.8M/S|2025年最新免费节点Free V2ray订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-84571.htm" title="宠物领养网官网网址是多少（宠物领养网站html模板）">宠物领养网官网网址是多少（宠物领养网站html模板）</a></li>
                        <li class="py-2"><a href="/news/article-70918.htm" title="动物灭活疫苗过期处理（疫苗过期了给动物打上会死吗）">动物灭活疫苗过期处理（疫苗过期了给动物打上会死吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-8-free-node-subscribe.htm" title="3月8日→20.9M/S|2025年最新免费节点Free V2ray订阅链接地址分享">3月8日→20.9M/S|2025年最新免费节点Free V2ray订阅链接地址分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //progress section -->
    <!--//testimonials-->
        <!-- footer -->
    <footer class="w3l-footer-16 py-5">
        <div class="container">
            <div class="below-section text-center">
                <p class="copy-text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <a href="/">Free V2ray免费梯子节点分享官网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fas fa-level-up-alt" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/free_v2ray/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/free_v2ray/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/free_v2ray/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the
        // class of outer div
        // The second paramter is the speed between each letter is typed.
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/free_v2ray/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>