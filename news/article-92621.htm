<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://free-v2ray.github.io/news/article-92621.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>json数据交互——@RequestBody与@ResponseBody</title>
        <meta name="description" content="json数据格式在接口调用中、html页面中比较常用，json格式比较简单，解析也比较方便，所以使用很普遍。在SpringMVC中，也支持对json数据的解析和转换，这篇文章主要总结一下在Spring" />
        <link rel="icon" href="/assets/website/img/free_v2ray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free V2ray免费梯子节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://free-v2ray.github.io/news/article-92621.htm" />
    <meta property="og:site_name" content="Free V2ray免费梯子节点分享官网" />
    <meta property="og:title" content="json数据交互——@RequestBody与@ResponseBody" />
    <meta property="og:image" content="https://free-v2ray.github.io/uploads/20240911-1/279bd4c646cc021cc353c76a9c70c3a6.webp" />
        <meta property="og:release_date" content="2025-04-10T08:17:29" />
    <meta property="og:updated_time" content="2025-04-10T08:17:29" />
        <meta property="og:description" content="json数据格式在接口调用中、html页面中比较常用，json格式比较简单，解析也比较方便，所以使用很普遍。在SpringMVC中，也支持对json数据的解析和转换，这篇文章主要总结一下在Spring" />
        
    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/free_v2ray/style-starter.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="json数据交互——@RequestBody与@ResponseBody">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EFW7LQ09JM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EFW7LQ09JM');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
<header id="site-header" class="fixed-top">
    <div class="container">
        <nav class="navbar navbar-expand-lg stroke px-0">
                        <a class="navbar-brand" href="/">
                <span>
                    Free V2ray                </span>
            </a>
                        <!-- if logo is image enable this
    <a class="navbar-brand" href="#index.html">
        <img src="image-path" alt="Your logo" title="Your logo" style="height:35px;" />
    </a> -->
            <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                <span class="navbar-toggler-icon fa icon-close fa-times"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                <ul class="navbar-nav ml-lg-auto">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                    </ul>
            </div>
            <!-- toggle switch for light and dark theme -->
            <div class="cont-ser-position mt-lg-2">
                <nav class="navigation">
                    <div class="theme-switch-wrapper">
                        <label class="theme-switch" for="checkbox">
                            <input type="checkbox" id="checkbox">
                            <div class="mode-container">
                                <i class="gg-sun"></i>
                                <i class="gg-moon"></i>
                            </div>
                        </label>
                    </div>
                </nav>
            </div>
            <!-- //toggle switch for light and dark theme -->
        </nav>
    </div>
</header>
<!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <div class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold">json数据交互——@RequestBody与@ResponseBody</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><i class="fas fa-angle-right mx-2"></i></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><i class="fas fa-angle-right mx-2"></i>正文</li>
                </ul>
            </div>
        </div>
    </div>
    <!-- //inner banner -->
    <!-- progress section -->
    <section class="w3l-about-2 py-5">
        <div class="container py-2">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <p>json数据格式在接口调用中、html页面中比较常用，json格式比较简单，解析也比较方便，所以使用很普遍。在SpringMVC中，也支持对json数据的解析和转换，这篇文章主要总结一下在SpringMVC中如何和前台交互json数据。<br /><strong>本节案例是在上一章案例的基础上做的。</strong></p> <h2><a id="jar_2" rel="nofollow"></a>jar包</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/934d40b15381a6b829c663e7fa3f95df.jpg" alt="json数据交互——@RequestBody与@ResponseBody"><br /> 本章使用jauery的ajax方法，不要到了导入jQuery函数库。<br /> 因为在使用spring-mvc时已经选择把所有路径都过滤交给spring-mvc，所以此处要配置css和js等文件，否则无法匹配到路径。此处案例只用了js文件，所以在spring-mvc.xml文件中配置js文件映射即可：</p> <pre><code class="prism language-xml"><span class="token comment">&lt;!--配置资源映射--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>resources</span><span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/js/<span class="token punctuation">"</span></span><span class="token attr-name">mapping</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/js/**<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/b72edac8cd253a9331fdf800a9309e98.jpg" alt="json数据交互——@RequestBody与@ResponseBody"></p> <hr/> <h2><a id="RequestBody_13" rel="nofollow"></a>@RequestBody</h2> <p><strong>@RequestBody注解用于读取http请求的内容(字符串)，通过SpringMVC提供的HttpMessageConverter接口将读到的内容转换为json、xml等格式的数据并绑定到Controller类方法的参数上。</strong><br /> 本案例完成@RequestBody注解实现接收http请求的json数据，将json数据转换为java对象。<br /> jsp:</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>   	通过Ajax发送Json字符串给服务器：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>发送<span class="token punctuation">"</span></span><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sendAjax()<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath}/js/jquery-1.7.2.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript"><span class="token keyword">function</span><span class="token function">sendAjax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> 				type<span class="token punctuation">:</span><span class="token string">"post"</span><span class="token punctuation">,</span>url<span class="token punctuation">:</span><span class="token string">"${pageContext.request.contextPath}/stu/json"</span><span class="token punctuation">,</span>data<span class="token punctuation">:</span><span class="token string">'{"studentId":"1","studentName":"张三","age":18}'</span><span class="token punctuation">,</span>contentType<span class="token punctuation">:</span><span class="token string">"application/json;charset=utf-8"</span><span class="token punctuation">,</span>success<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></code></pre> <p>SpringMVC和前台交互主要有两种形式：</p> <ul> <li>一种是传json格式的数据过来，需要指定contextType为"application/json;charset=utf-8"，然后在后台使用@RequestBody将json字符串转成java对象</li> <li>另一种就是在url的末尾传普通的key/value串过来，需要指定contextType为"application/x-www-form-urlen"，后台不用使用@RequestBoby转换。<br /> 此案例就是以传json格式的数据为例，下面完成Controller:</li> </ul> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/json"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Student student<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span><span class="token function">getStudentName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/807f65a8846f7988632e3c3887424c45.jpg" alt="json数据交互——@RequestBody与@ResponseBody"></p> <hr/> <h2><a id="ResponseBody_52" rel="nofollow"></a>@ResponseBody</h2> <p>@ResponseBody注解用于将Controller类的方法返回的对象，通过HttpMessageConverter接口转换为指定格式的数据如：json、xml等，通过Response响应给客户端。<br /> 此案例完成@ResponseBody注解实现将Controller类方法返回对象转换为json响应给客户端：<br /> 修改Controller中的json方法为：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/json"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> Student<span class="token function">json</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Student student<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span><span class="token function">getStudentName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> student<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/df4669e2f79d3ae15d8a999ee1f5e3ba.jpg" alt="json数据交互——@RequestBody与@ResponseBody"></p> <hr/> <h2><a id="json_67" rel="nofollow"></a>配置json转换器</h2> <p>这里需要配置配置json转换器。但是如果使用了&lt;mvc:annotation-driven /&gt;注解驱动的话就不用以上的配置了。</p> <p>测试即可：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/6c120f3c44720f06a77f63427bf8423d.jpg" alt="json数据交互——@RequestBody与@ResponseBody"></p> <p>响应的结果，null表示空值，这里就返回了原对象<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/a35e0ec4d2c4da0cf2637890239d0750.jpg" alt="json数据交互——@RequestBody与@ResponseBody"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-91899.htm">中国兽药网价格表（兽药报价网）</a></p>
                                        <p>下一个：<a href="/news/article-92622.htm">模型的威力：基于模型，快速梳理源码_在线工具</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-88180.htm" title="宠物领养须知图片素材（宠物领养注意事项）">宠物领养须知图片素材（宠物领养注意事项）</a></li>
                        <li class="py-2"><a href="/news/article-67047.htm" title="猫三联是三针还是一针好（猫三联一针是什么意思）">猫三联是三针还是一针好（猫三联一针是什么意思）</a></li>
                        <li class="py-2"><a href="/news/article-86723.htm" title="动物疫苗研发过程图片（动物疫苗研究进展）">动物疫苗研发过程图片（动物疫苗研究进展）</a></li>
                        <li class="py-2"><a href="/news/article-81052.htm" title="动物医院要求什么学历才能进编制（动物医院要求什么学历才能进编制呢）">动物医院要求什么学历才能进编制（动物医院要求什么学历才能进编制呢）</a></li>
                        <li class="py-2"><a href="/news/article-76927.htm" title="动物疫苗贵吗多少钱（动物疫苗多少钱一支）">动物疫苗贵吗多少钱（动物疫苗多少钱一支）</a></li>
                        <li class="py-2"><a href="/news/article-78984.htm" title="Android中EditText光标的显示与隐藏方法">Android中EditText光标的显示与隐藏方法</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-7-free-v2ray-subscribe.htm" title="3月7日→18.8M/S|2025年最新免费节点Free V2ray订阅链接地址分享">3月7日→18.8M/S|2025年最新免费节点Free V2ray订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-84571.htm" title="宠物领养网官网网址是多少（宠物领养网站html模板）">宠物领养网官网网址是多少（宠物领养网站html模板）</a></li>
                        <li class="py-2"><a href="/news/article-67046.htm" title="让猫挠了轻微出血有事吗过了24小时没事了（让猫挠了轻微出血有事吗过了24小时没事了怎么办）">让猫挠了轻微出血有事吗过了24小时没事了（让猫挠了轻微出血有事吗过了24小时没事了怎么办）</a></li>
                        <li class="py-2"><a href="/news/article-83151.htm" title="领养宠物海报（领养宠物海报模板）">领养宠物海报（领养宠物海报模板）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //progress section -->
    <!--//testimonials-->
        <!-- footer -->
    <footer class="w3l-footer-16 py-5">
        <div class="container">
            <div class="below-section text-center">
                <p class="copy-text">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">Free V2ray免费梯子节点分享官网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fas fa-level-up-alt" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/free_v2ray/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/free_v2ray/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/free_v2ray/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the
        // class of outer div
        // The second paramter is the speed between each letter is typed.
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/free_v2ray/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>