<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://free-v2ray.github.io/news/article-61526.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>.NET宝藏API之：OutputFormatter，格式化输出对象</title>
        <meta name="description" content="相信大家在项目中都用过统一响应参数模板。 先声明一个响应模板类： public class ResponseDto {     public int code { get; set; }     pu" />
        <link rel="icon" href="/assets/website/img/free_v2ray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free V2ray免费梯子节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://free-v2ray.github.io/news/article-61526.htm" />
    <meta property="og:site_name" content="Free V2ray免费梯子节点分享官网" />
    <meta property="og:title" content=".NET宝藏API之：OutputFormatter，格式化输出对象" />
    <meta property="og:image" content="https://free-v2ray.github.io/uploads/20240911-1/ca739634c266bae41556d27eeb274c60.webp" />
        <meta property="og:release_date" content="2025-02-23T09:46:00" />
    <meta property="og:updated_time" content="2025-02-23T09:46:00" />
        <meta property="og:description" content="相信大家在项目中都用过统一响应参数模板。 先声明一个响应模板类： public class ResponseDto {     public int code { get; set; }     pu" />
        
    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/free_v2ray/style-starter.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content=".NET宝藏API之：OutputFormatter，格式化输出对象">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EFW7LQ09JM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EFW7LQ09JM');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
<header id="site-header" class="fixed-top">
    <div class="container">
        <nav class="navbar navbar-expand-lg stroke px-0">
                        <a class="navbar-brand" href="/">
                <span>
                    Free V2ray                </span>
            </a>
                        <!-- if logo is image enable this
    <a class="navbar-brand" href="#index.html">
        <img src="image-path" alt="Your logo" title="Your logo" style="height:35px;" />
    </a> -->
            <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                <span class="navbar-toggler-icon fa icon-close fa-times"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                <ul class="navbar-nav ml-lg-auto">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                    </ul>
            </div>
            <!-- toggle switch for light and dark theme -->
            <div class="cont-ser-position mt-lg-2">
                <nav class="navigation">
                    <div class="theme-switch-wrapper">
                        <label class="theme-switch" for="checkbox">
                            <input type="checkbox" id="checkbox">
                            <div class="mode-container">
                                <i class="gg-sun"></i>
                                <i class="gg-moon"></i>
                            </div>
                        </label>
                    </div>
                </nav>
            </div>
            <!-- //toggle switch for light and dark theme -->
        </nav>
    </div>
</header>
<!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <div class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold">.NET宝藏API之：OutputFormatter，格式化输出对象</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><i class="fas fa-angle-right mx-2"></i></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active"><i class="fas fa-angle-right mx-2"></i>正文</li>
                </ul>
            </div>
        </div>
    </div>
    <!-- //inner banner -->
    <!-- progress section -->
    <section class="w3l-about-2 py-5">
        <div class="container py-2">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>相信大家在项目中都用过统一响应参数模板。</p> <p>先声明一个响应模板类：</p> <pre><code>public class ResponseDto {     public int code { get; set; }     public string msg { get; set; }     public object data { get; set; } }</code></pre> <p>再定义返回成功和失败的方法：</p> <pre><code>public IActionResult Success(object data) { 	return ...... } public IActionResult Fail(string msg) { 	return ...... }</code></pre> <p>在接口返回时统一调用：</p> <pre><code>[HttpGet] public IActionResult Get() { 	var data = new WeatherForecast() { Date = DateTime.Now }; 	return Success(data); }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ae25d378608b29680dbbe77f48da306b.jpg" alt=".NET宝藏API之：OutputFormatter，格式化输出对象"></p> <p>当然了，这篇文章所讲的<code>OutputFormatter</code>和上面的统一模板不冲突哈，存在共通之处，都是格式化响应参数嘛，拿来做个引子。</p> <h3 id="outputformatter">OutputFormatter</h3> <p><code>OutputFormatter</code>是所有格式化输出的基类，有唯一的子类：<code>TextOutputFormatter</code>，同时<code>TextOutputFormatter</code>又有一大堆子类：</p> <pre><code>JsonOutputFormatter NewtonsoftJsonOutputFormatter StringOutputFormatter SystemTextJsonOutputFormatter XmlDataContractSerializerOutputFormatter XmlSerializerOutputFormatter</code></pre> <p>如果不配置任何响应参数输出格式，<code>asp.net core api</code>响应参数默认的输出格式就是<code>json</code>。</p> <p>猴：这个接口给我返回<code>xml</code>，我不要<code>json</code>。</p> <p>我：你是不是脑子有毛病？好好的<code>json</code>不用用<code>xml</code>。</p> <p>得，前端大佬得要求还是得满足不是，这时候有些同学是不是已经去百度：<code>.Net怎么将对象转换成xml？</code></p> <p><code>No</code><code>No</code><code>No</code>，这时候就轮到<code>OutputFormatter</code>的孙子<code>XmlDataContractSerializerOutputFormatter</code> 出场了。</p> <p>只需要简单给接口配置一个属性就搞定啦。</p> <pre><code>[Produces("application/xml")] [HttpGet] public WeatherForecast Get() { 	return new WeatherForecast() { Date = DateTime.Now }; }</code></pre> <p>我们来运行看一看：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3cde0b75c6769f27bac3151c5dbc16d6.jpg" alt=".NET宝藏API之：OutputFormatter，格式化输出对象"></p> <p><code>wtf</code>，怎么会<code>406</code>。</p> <p><strong>406：表示客户端无法解析服务端返回的内容。说白了就是后台的返回结果前台无法解析就报406错误。</strong></p> <p>哦，原来是忘了在<code>Startup</code>中配置我们的孙子<code>XmlDataContractSerializerOutputFormatter</code>。</p> <pre><code>services.AddControllers((c) =&gt; { 	c.OutputFormatters.Add(new XmlDataContractSerializerOutputFormatter()); });</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b3ef9d8b4c94ccff6c305a987d686b56.jpg" alt=".NET宝藏API之：OutputFormatter，格式化输出对象"></p> <p>注意：不只是没有在<code>Startup</code>中会出现<code>406</code>哦，以下情况也会出现：</p> <ul> <li>contentType不存在</li> <li>contentType与响应参数不匹配</li> </ul> <h3 id="outputformatter扩展">OutputFormatter扩展</h3> <p>上面介绍了内置<code>OutputFormatter</code>的使用，那如果我们想自定义呢？当然也是可以的。</p> <p>下面我们就用自定义的<code>OutputFormatter</code>实现顶部响应模板的效果：</p> <pre><code>public class ObjectOutputFormatter : TextOutputFormatter { 	public ObjectOutputFormatter() 	{ 		SupportedEncodings.Add(Encoding.UTF8); 		SupportedEncodings.Add(Encoding.Unicode); 		// 这就是我们自定义contentType的名称 		SupportedMediaTypes.Add("text/object"); 	}  	public override async Task WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding) 	{ 		if (context == null) 		{ 			throw new ArgumentNullException(nameof(context)); 		} 		if (selectedEncoding == null) 		{ 			throw new ArgumentNullException(nameof(selectedEncoding)); 		} 		string text = JsonConvert.SerializeObject(new ResponseDto() 		{ 			msg = "成功，自定义的哦", 			code = 200, 			data = context.Object 		}); 		var response = context.HttpContext.Response; 		await response.WriteAsync(text, selectedEncoding); 	} }  [Produces("text/object")] [HttpGet] public WeatherForecast Get() { 	return new WeatherForecast() { Date = DateTime.Now }; }  public void ConfigureServices(IServiceCollection services) { 	services.AddControllers((c) =&gt; 	{ 		c.OutputFormatters.Add(new XmlDataContractSerializerOutputFormatter()); 		// 我们自定义的输出格式 		c.OutputFormatters.Add(new ObjectOutputFormatter()); 	}); }</code></pre> <p>搞定，我们来看看效果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4b54e8c7cfedbff6f62041387bc0d928.jpg" alt=".NET宝藏API之：OutputFormatter，格式化输出对象"></p> <h3 id="actionfilterattribute">ActionFilterAttribute</h3> <p>有些同学可能会想到过滤器，是的，上面的效果过滤器也能实现：</p> <pre><code>public class ResultFilter : ActionFilterAttribute {     public override void OnResultExecuting(ResultExecutingContext context)     {         ResponseDto result = new ResponseDto();         result.code = 200;         result.msg = "成功，ResultFilter";         var properties = context.Result.GetType().GetProperties(BindingFlags.Instance | BindingFlags.Public);         result.data = properties.FirstOrDefault(c =&gt; c.Name == "Value").GetValue(context.Result);         context.Result = new JsonResult(result);         base.OnResultExecuting(context);     } }  [TypeFilter(typeof(ResultFilter))] [HttpGet] public WeatherForecast Get() { 	return new WeatherForecast() { Date = DateTime.Now }; }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/29433177d235950b197a91c9a0b93bcc.jpg" alt=".NET宝藏API之：OutputFormatter，格式化输出对象"></p> <p>猴：有了过滤器为什么还搞个<code>OutputFormatter</code>呢？</p> <p>我：不能因为过滤器可以实现同样的功能就认为<code>OutputFormatter</code>多余了，很显然过滤器的操作对象是请求/响应上下文，而<code>OutputFormatter</code>的操作对象则是响应参数。再说了，<code>ActionFilterAttribute</code>过滤器只是众多过滤器的一种。</p> <p>猴：那过滤器和自定义<code>OutputFormatter</code>一起用会是什么效果呢？是不是像下面这样？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a207274c355e1f8b4e5c79da7cbf8cd4.jpg" alt=".NET宝藏API之：OutputFormatter，格式化输出对象"></p> <p>我：不是，过滤器和自定义<code>OutputFormatter</code>同时使用，生效的只有过滤器，不信可以打断点试一下哦。</p> <pre><code>[Produces("text/object")] [TypeFilter(typeof(ResultFilter))] [HttpGet] public WeatherForecast Get() { 	return new WeatherForecast() { Date = DateTime.Now }; }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6effa886e8c8815f0cc2ece0a4863021.jpg" alt=".NET宝藏API之：OutputFormatter，格式化输出对象"></p> <p>具体原因在这里就不细说了，等后面再分享（其实我也还没弄清楚，逼着自己去了解）</p> <p>好了，这期的宝藏<code>API</code>就到这了，下期再见哦，如果有下期的话。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-61525.htm">vue-cli4.5.13按需引入vant，解决vant样式失效问题</a></p>
                                        <p>下一个：<a href="/news/article-62123.htm">strftime locale&#8217; codec can&#8217;t encode character &#8216;\u4e2d&#8217; in position 31: Illegal byte sequ</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-25208.htm" title="动物疫苗公司 上海 动物疫苗公司 上海有几家">动物疫苗公司 上海 动物疫苗公司 上海有几家</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-26-free-node-subscribe.htm" title="2月26日→20.2M/S|2025年最新免费节点Free V2ray订阅链接地址分享">2月26日→20.2M/S|2025年最新免费节点Free V2ray订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-35162.htm" title="动物疫苗的保管注意事项 动物疫苗的保管注意事项有哪些">动物疫苗的保管注意事项 动物疫苗的保管注意事项有哪些</a></li>
                        <li class="py-2"><a href="/news/article-51498.htm" title="C语言实现顺序表的基本操作(简单版)">C语言实现顺序表的基本操作(简单版)</a></li>
                        <li class="py-2"><a href="/news/article-33683.htm" title="华畜兽药有限公司官网招聘（华畜兽药厂家地址在哪里）">华畜兽药有限公司官网招聘（华畜兽药厂家地址在哪里）</a></li>
                        <li class="py-2"><a href="/news/article-54163.htm" title="Go单体服务开发最佳实践">Go单体服务开发最佳实践</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-22-free-node-subscribe-links.htm" title="11月22日→20.1M/S|2024年最新免费节点Free V2ray订阅链接地址">11月22日→20.1M/S|2024年最新免费节点Free V2ray订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-5-free-node-subscribe-links.htm" title="2月5日→18.2M/S|2025年最新免费节点Free V2ray订阅链接地址分享">2月5日→18.2M/S|2025年最新免费节点Free V2ray订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-58725.htm" title="猫咪最信任你的八大表现（猫让摸哪里代表信任你）">猫咪最信任你的八大表现（猫让摸哪里代表信任你）</a></li>
                        <li class="py-2"><a href="/news/article-52548.htm" title="动物防疫站打疫苗多少钱一次 动物防疫站打疫苗多少钱一次啊">动物防疫站打疫苗多少钱一次 动物防疫站打疫苗多少钱一次啊</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">78</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //progress section -->
    <!--//testimonials-->
        <!-- footer -->
    <footer class="w3l-footer-16 py-5">
        <div class="container">
            <div class="below-section text-center">
                <p class="copy-text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <a href="/">Free V2ray免费梯子节点分享官网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fas fa-level-up-alt" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/free_v2ray/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/free_v2ray/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/free_v2ray/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the
        // class of outer div
        // The second paramter is the speed between each letter is typed.
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/free_v2ray/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>